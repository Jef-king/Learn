
C is a general purpose programming language, developed in 1972, and still quite popular.

C is very powerful; it has been used to develop operating systems, databases, applications, etc.

#include <stdio.h>
int main(){
printf("Hello World!");
return 0;
}



What is C ?

C is a gerneral-purpose programming language created by Dennis Ritchie at the Bell Laboratories in 1972.

It is a very popular language, despite being old. The main reason for its popularity is because it is a fundamental language in the field of computer science.

C is strongly associated with UNIX, as it was developed to write the UNIX operating system.



Why Learn C ?

It is one of the most popular programming languages in the world.

If you know C, you will have no problem learning other popular programming languages such as Java, Python, C++, C#, etc, as the syntax is similar.

C is very fast, compared to other programming languages, like Java and Python.

C is very versatile; it can be used in both applications and technologies.



Difference between C and C++

C++ was developed as an extension of C, and both languages have almost the same syntax.

The main difference between C and C++ is that C++ support classes and objects, while C does not.



C Syntax

#include <stdio.h> // header file library
int main(){ // is called the function and anything inside its curly brackets {} will be executed.
printf("Hello World!"); // to print the output of the file
return 0; //every c statements ends with a semicolon ;
}



C Statements

A computer program is a list of "instructions" to be "executed" by a computer.

In a programming language, these programming instructions are called statements.

The following statement "instructs" the compiler to print the text "Hello World" to the screen:

printf("Hello World!");

It is important that you end the statement with a semicolon ;.

If you forget the semicolon (;) an error will occur tha progra will not run.



C Escape Sequence

To insert a new line, you can use the \n character:

printf("Hello");
printf("I am Jefking");

is same as

printf("Hello \n I am Jefking");

To create a horizontal tab, you can use the \t character:

printf("Hello!    Hi I am Jefking");

is same as

printf("Hello!\tI am Jefking");

To insert a backslash  character(\), you can use the \\ character:

printf("\\Hello\\");

\Hello\

To insert a double quote character, you can use \":

printf("\"Hello!\"");

"Hello!"



C Comments

Comments can be used to explain code, and to make it more readable. It can also be used to prevent execution when testing alternative code.

Comments can be singled-lined or multi-lined.

Single-line Comments

Single-line comments starts with two forward slashes (//).

Any text between // and the end of the line is ignored by the compiler (will not be executed).

// This is a single line comment.

Multi-line Comments

Multi-line comments start with /* and ends with */.

Any text between /* and */ will be ignored by the compiler.

/* hi this is a multi-line comment
any thing written between /*...*/ are ignored */




C Variables

Variables are containers for storing data values, like numbers and character.

In C, there are different types of variables (defined with different keywords), for example:

int-store integer(whole numbers), without decimals, such as 123 or -123.
float-stores floating point numbers, wiht decimals, such as 19.99 or -19.99.
char-stores single characters, such as 'a' or 'B'. Characters are surrounded by single quotes.

Declaring (Creating) Variables

To create a variable, specify the type and assign it a value:

type variableName =value;

Where tye is one of C types (such as int), and variableName is the name of the variable (such as x or myName).The equal sign is used to assign a value to the variable.

So, to create a variable that should store a number, look at the following example:

int myNum=15;//declaration and assign value

int myNumber;//declare a variable

myNumber=10;//assign a value to the variable



C Format Specifiers

Format specifiers are used together with the printf() function to tell the compiler what type of data the variable is storing. It is bascially a placeholder for the variable value.

A format specifier starts with a percentage sign %, followed by  a character.

%d for integer

%c for character

%f for float and double

%s for string

%lu for for multiple line



C Declare Multiple Variables

To declare a multiple variable of same type, use a comma-seperated list:

int x,y=1,z=6;



